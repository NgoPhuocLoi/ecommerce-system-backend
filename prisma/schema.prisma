// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "tenantSpecific"]
}

model Accounts {
  id        String   @id @default(uuid())
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  shops Shops[]

  @@map("accounts")
  @@schema("public")
}

model Categories {
  id        Int      @id @default(autoincrement())
  name      String
  parentId  Int?     @map("parent_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  parent   Categories?  @relation("chilren", fields: [parentId], references: [id])
  children Categories[] @relation("chilren")

  @@map("categories")
  @@schema("public")
}

model Shops {
  id        String   @id @default(uuid())
  name      String
  accountId String   @map("account_id")
  account   Accounts @relation(fields: [accountId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("shops")
  @@schema("public")
}

model PaymentMethods {
  id   Int    @id @default(autoincrement())
  name String

  @@map("payment_methods")
  @@schema("public")
}

model OrderStatus {
  id   Int    @id @default(autoincrement())
  name String

  @@map("order_status")
  @@schema("public")
}

model PaymentStatus {
  id   Int    @id @default(autoincrement())
  name String

  @@map("payment_status")
  @@schema("public")
}

model Permissions {
  id   Int    @id @default(autoincrement())
  name String

  @@map("permissions")
  @@schema("public")
}

// -----------------------------------------------

model Products {
  id                  Int     @id @default(autoincrement())
  categoryId          Int     @map("category_id")
  name                String
  description         String?
  isActive            Boolean @map("is_active")
  cost                Float
  price               Float
  compareAtPrice      Float   @map("compare_at_price")
  availableQuantity   Int     @map("available_quantity")
  incomingQuantity    Int     @map("incoming_quantity")
  soldNumber          Int     @map("sold_number")
  customProductTypeId Int?    @map("custom_product_type_id")

  images            ProductsImages[]
  ProductOptions    ProductOptions[]
  customProductType CustomProductType? @relation(fields: [customProductTypeId], references: [id])

  @@map("products")
  @@schema("tenantSpecific")
}

model ProductsImages {
  id              Int @id @default(autoincrement())
  productId       Int @map("product_id")
  uploadedImageId Int @map("uploaded_image_id")

  product       Products       @relation(fields: [productId], references: [id])
  uploadedImage UploadedImages @relation(fields: [uploadedImageId], references: [id])

  @@map("products_images")
  @@schema("tenantSpecific")
}

model Variants {
  id                Int   @id @default(autoincrement())
  productId         Int   @map("product_id")
  price             Float
  compareAtPrice    Float @map("compare_at_price")
  availableQuantity Int   @map("available_quantity")
  incomingQuantity  Int   @map("incoming_quantity")
  soldNumber        Int   @map("sold_number")
  imageId           Int?  @map("image_id")

  image                   UploadedImages?             @relation(fields: [imageId], references: [id])
  variantOptionWithValues VariantHasOptionWithValue[]

  @@map("variants")
  @@schema("tenantSpecific")
}

model ProductOptions {
  id        Int    @id @default(autoincrement())
  productId Int    @map("product_id")
  name      String

  product                Products                    @relation(fields: [productId], references: [id])
  values                 OptionValues[]
  variantsWithThisOption VariantHasOptionWithValue[]

  @@map("product_options")
  @@schema("tenantSpecific")
}

model OptionValues {
  id       Int    @id @default(autoincrement())
  optionId Int    @map("option_id")
  value    String
  // displayedType

  option                ProductOptions              @relation(fields: [optionId], references: [id])
  variantsWithThisValue VariantHasOptionWithValue[]

  @@map("option_values")
  @@schema("tenantSpecific")
}

model VariantHasOptionWithValue {
  id        Int @id @default(autoincrement())
  variantId Int @map("variant_id")
  optionId  Int @map("option_id")
  valueId   Int @map("value_id")

  option  ProductOptions @relation(fields: [optionId], references: [id])
  value   OptionValues   @relation(fields: [valueId], references: [id])
  variant Variants       @relation(fields: [variantId], references: [id])

  @@map("variant_has_option_with_value")
  @@schema("tenantSpecific")
}

model CustomProductType {
  id   Int    @id @default(autoincrement())
  name String

  products Products[]

  @@map("custom_product_types")
  @@schema("tenantSpecific")
}

model UploadedImages {
  id       Int    @id @default(autoincrement())
  fileName String @map("file_name")
  imageUrl String @map("image_url")

  products ProductsImages[]
  variant  Variants[]

  @@map("uploaded_images")
  @@schema("tenantSpecific")
}

model OnlineShopPages {
  id     Int    @id @default(autoincrement())
  name   String
  layout String

  @@map("online_shop_pages")
  @@schema("tenantSpecific")
}
